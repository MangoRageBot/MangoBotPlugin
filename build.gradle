import org.mangorage.mangobotgradle.util.GitVersion

buildscript {
    repositories {
        mavenCentral()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = 'https://repo.mattmalec.com/repository/releases'
        }
        maven {
            url = "https://maven.minecraftforge.net/"
        }
    }

    dependencies {
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
        classpath 'org.mangorage:MangoBotGradle:5.0.6'
    }
}

plugins {
    id 'org.gradlex.extra-java-module-info' version '1.12'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'MangoBotGradle'
apply plugin: 'maven-publish'

group = 'org.mangorage'
version = GitVersion.getGitVersion().getVersionAsString()

println("Version: " + version)

extraJavaModuleInfo {
    setDeriveAutomaticModuleNamesFromFileNames(true)
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor {
        languageVersion.set(JavaLanguageVersion.of(24))
    })
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = 'https://maven.minecraftforge.net/'
    }
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url "https://maven.lavalink.dev/releases/"
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    installer('org.mangorage:installer:4.0.3')
    bot('org.mangorage:mangobot:12.0.4')

    library('org.luaj:luaj-jse:3.0.1')
}

configurations.all {
    resolutionStrategy {
        force 'com.google.code.gson:gson:2.11.+'
    }
}

test {
    useJUnitPlatform()
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            mangobot_version: version
    ]
    inputs.properties replaceProperties

    filesMatching(['mangobot.plugin.json']) {
        expand replaceProperties + [project: project]
    }
}

MangoBotConfig {
    setJarTask(jar)
}

publishing {
    publications.register("mangobotaddon", MavenPublication) {
        artifact jar

        pom {
            name = 'MangoBotPlugin'
            description = 'The Main Plugin For MangoBot'
            url = 'https://github.com/MangoRageBot/MangoBotPlugin'
            issueManagement {
                system = 'github'
                url = 'https://github.com/MangoRageBot/MangoBotPlugin/issues'
            }
            developers {
                developer {
                    id = 'mangorage'
                    name = 'MangoRage'
                }
            }
            withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.library.getDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.group)
                    dependency.appendNode('artifactId', it.name)
                    dependency.appendNode('version', it.version)
                }
            }
        }
    }

    repositories {
        maven {
            url = "https://maven.minecraftforge.net/"

            credentials {
                username = System.getenv("MAVEN_USER")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}